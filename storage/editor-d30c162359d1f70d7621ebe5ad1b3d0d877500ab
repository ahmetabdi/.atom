{"mode":"editor","version":1,"windowDimensions":{"x":845,"y":155,"width":1656,"height":1196,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/ahmet/Projects/rails"],"buffers":[{"text":"# Active Job -- Make work happen later\n\nActive Job is a framework for declaring jobs and making them run on a variety\nof queueing backends. These jobs can be everything from regularly scheduled\nclean-ups, to billing charges, to mailings. Anything that can be chopped up into\nsmall units of work and run in parallel, really.\n\nIt also serves as the backend for Action Mailer's #deliver_later functionality\nthat makes it easy to turn any mailing into a job for running later. That's\none of the most common jobs in a modern web application: sending emails outside\nof the request-response cycle, so the user doesn't have to wait on it.\n\nThe main point is to ensure that all Rails apps will have a job infrastructure\nin place, even if it's in the form of an \"immediate runner\". We can then have\nframework features and other gems build on top of that, without having to worry\nabout API differences between Delayed Job and Resque. Picking your queuing\nbackend becomes more of an operational concern, then. And you'll be able to\nswitch between them without having to rewrite your jobs.\n\n\n## Usage\n\nSet the queue adapter for Active Job:\n\n``` ruby\nActiveJob::Base.queue_adapter = :inline # default queue adapter\n```\nNote: To learn how to use your preferred queueing backend see its adapter\ndocumentation at\n[ActiveJob::QueueAdapters](http://api.rubyonrails.org/classes/ActiveJob/QueueAdapters.html).\n\nDeclare a job like so:\n\n```ruby\nclass MyJob < ActiveJob::Base\n  queue_as :my_jobs\n\n  def perform(record)\n    record.do_work\n  end\nend\n```\n\nEnqueue a job like so:\n\n```ruby\nMyJob.perform_later record  # Enqueue a job to be performed as soon the queueing system is free.\n```\n\n```ruby\nMyJob.set(wait_until: Date.tomorrow.noon).perform_later(record)  # Enqueue a job to be performed tomorrow at noon.\n```\n\n```ruby\nMyJob.set(wait: 1.week).perform_later(record) # Enqueue a job to be performed 1 week from now.\n```\n\nThat's it!\n\n\n## GlobalID support\n\nActive Job supports [GlobalID serialization](https://github.com/rails/globalid/) for parameters. This makes it possible\nto pass live Active Record objects to your job instead of class/id pairs, which\nyou then have to manually deserialize. Before, jobs would look like this:\n\n```ruby\nclass TrashableCleanupJob\n  def perform(trashable_class, trashable_id, depth)\n    trashable = trashable_class.constantize.find(trashable_id)\n    trashable.cleanup(depth)\n  end\nend\n```\n\nNow you can simply do:\n\n```ruby\nclass TrashableCleanupJob\n  def perform(trashable, depth)\n    trashable.cleanup(depth)\n  end\nend\n```\n\nThis works with any class that mixes in GlobalID::Identification, which\nby default has been mixed into Active Record classes.\n\n\n## Supported queueing systems\n\nActive Job has built-in adapters for multiple queueing backends (Sidekiq,\nResque, Delayed Job and others). To get an up-to-date list of the adapters\nsee the API Documentation for [ActiveJob::QueueAdapters](http://api.rubyonrails.org/classes/ActiveJob/QueueAdapters.html).\n\n## Auxiliary gems\n\n* [activejob-stats](https://github.com/seuros/activejob-stats)\n\n## Download and installation\n\nThe latest version of Active Job can be installed with RubyGems:\n\n```\n  % [sudo] gem install activejob\n```\n\nSource code can be downloaded as part of the Rails project on GitHub\n\n* https://github.com/rails/rails/tree/master/activejob\n\n## License\n\nActive Job is released under the MIT license:\n\n* http://www.opensource.org/licenses/MIT\n\n\n## Support\n\nAPI documentation is at:\n\n* http://api.rubyonrails.org\n\nBug reports can be filed for the Ruby on Rails project here:\n\n* https://github.com/rails/rails/issues\n\nFeature requests should be discussed on the rails-core mailing list here:\n\n* https://groups.google.com/forum/?fromgroups#!forum/rubyonrails-core\n","markers":{"markers":{"1":{"id":1,"range":[[0,12],[0,12]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":24,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[{"patches":[{"oldRange":[[0,12],[0,13]],"newRange":[[0,12],[0,12]],"oldText":"s","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ahmet/Projects/rails/activejob/README.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"59e78c09242261c282f8f8751302c816d8d195af","deserializer":"TextBuffer"},{"text":"pwd = File.dirname(__FILE__)\n$:.unshift pwd\n\n# This is a predicate useful for the doc:guides task of applications.\ndef bundler?\n  # Note that rake sets the cwd to the one that contains the Rakefile\n  # being executed.\n  File.exist?('Gemfile')\nend\n\nbegin\n  # Guides generation in the Rails repo.\n  as_lib = File.join(pwd, \"../activesupport/lib\")\n  ap_lib = File.join(pwd, \"../actionpack/lib\")\n\n  $:.unshift as_lib if File.directory?(as_lib)\n  $:.unshift ap_lib if File.directory?(ap_lib)\nrescue LoadError\n  # Guides generation from gems.\n  gem \"actionpack\", '>= 3.0'\nend\n\nbegin\n  require 'redcarpet'\nrescue LoadError\n  # This can happen if doc:guides is executed in an application.\n  $stderr.puts('Generating guides requires Redcarpet 3.2.2+.')\n  $stderr.puts(<<ERROR) if bundler?\nPlease add\n\n  gem 'redcarpet', '~> 3.2.2'\n\nto the Gemfile, run\n\n  bundle install\n\nand try again.\nERROR\n  exit 1\nend\n\nbegin\n  require 'nokogiri'\nrescue LoadError\n  # This can happen if doc:guides is executed in an application.\n  $stderr.puts('Generating guides requires Nokogiri.')\n  $stderr.puts(<<ERROR) if bundler?\nPlease add\n\n  gem 'nokogiri'\n\nto the Gemfile, run\n\n  bundle install\n\nand try again.\nERROR\n  exit 1\nend\n\nrequire 'rails_guides/markdown'\nrequire \"rails_guides/generator\"\nRailsGuides::Generator.new.generate\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":169},"deserializer":"Marker"},"9":{"id":9,"range":[[1,0],[1,14]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[12,26],[12,49]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[13,26],[13,46]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"12":{"id":12,"range":[[15,2],[15,46]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"13":{"id":13,"range":[[16,2],[16,46]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"14":{"id":14,"range":[[19,6],[19,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"15":{"id":15,"range":[[61,8],[61,32]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ahmet/Projects/rails/guides/rails_guides.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"d7a5aaeece8a8d54f38bbb3f5029d24c00f3c235","deserializer":"TextBuffer"},{"text":"*   New section in Active Record Association Basics: Single Table Inheritance\n\n    *Andrey Nering*\n\n*   New section in Active Record Querying: Understanding The Method Chaining\n\n    *Andrey Nering*\n\n*   New section in Configuring: Search Engines Indexing\n\n    *Andrey Nering*\n\nPlease check [4-2-stable](https://github.com/rails/rails/blob/4-2-stable/guides/CHANGELOG.md) for previous changes.\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":173},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ahmet/Projects/rails/guides/CHANGELOG.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9989376125372677ac69d95dfde3a8cabd4f4f9d","deserializer":"TextBuffer"},{"text":"namespace :guides do\n\n  desc 'Generate guides (for authors), use ONLY=foo to process just \"foo.md\"'\n  task :generate => 'generate:html'\n\n  namespace :generate do\n\n    desc \"Generate HTML guides\"\n    task :html do\n      ENV[\"WARN_BROKEN_LINKS\"] = \"1\" # authors can't disable this\n      ruby \"rails_guides.rb\"\n    end\n\n    desc \"Generate .mobi file. The kindlegen executable must be in your PATH. You can get it for free from http://www.amazon.com/gp/feature.html?docId=1000765211\"\n    task :kindle do\n      unless `kindlerb -v 2> /dev/null` =~ /kindlerb 0.1.1/\n        abort \"Please `gem install kindlerb` and make sure you have `kindlegen` in your PATH\"\n      end\n      unless `convert` =~ /convert/  \n        abort \"Please install ImageMagick`\"\n      end\n      ENV['KINDLE'] = '1'\n      Rake::Task['guides:generate:html'].invoke\n    end\n  end\n\n  # Validate guides -------------------------------------------------------------------------\n  desc 'Validate guides, use ONLY=foo to process just \"foo.html\"'\n  task :validate do\n    ruby \"w3c_validator.rb\"\n  end\n\n  desc \"Show help\"\n  task :help do\n    puts <<-help\n\nGuides are taken from the source directory, and the result goes into the\noutput directory. Assets are stored under files, and copied to output/files as\npart of the generation process.\n\nYou can generate HTML, Kindle or both formats using the `guides:generate` task.\n\nAll of these processes are handled via rake tasks, here's a full list of them:\n\n#{%x[rake -T]}\nSome arguments may be passed via environment variables:\n\n  WARNINGS=1\n    Internal links (anchors) are checked, also detects duplicated IDs.\n\n  ALL=1\n    Force generation of all guides.\n\n  ONLY=name\n    Useful if you want to generate only one or a set of guides.\n\n    Generate only association_basics.html:\n      ONLY=assoc\n\n    Separate many using commas:\n      ONLY=assoc,migrations\n\n  GUIDES_LANGUAGE\n    Use it when you want to generate translated guides in\n    source/<GUIDES_LANGUAGE> folder (such as source/es)\n\n  EDGE=1\n    Indicate generated guides should be marked as edge.\n\nExamples:\n  $ rake guides:generate ALL=1\n  $ rake guides:generate EDGE=1\n  $ rake guides:generate:kindle EDGE=1\n  $ rake guides:generate GUIDES_LANGUAGE=es\n    help\n  end\nend\n\ntask :default => 'guides:help'\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":177},"deserializer":"Marker"},"17":{"id":17,"range":[[1,0],[1,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"18":{"id":18,"range":[[3,7],[3,35]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"19":{"id":19,"range":[[6,0],[6,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"20":{"id":20,"range":[[7,9],[7,31]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"21":{"id":21,"range":[[9,10],[9,65]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"22":{"id":22,"range":[[10,11],[10,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"23":{"id":23,"range":[[13,9],[13,162]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"24":{"id":24,"range":[[16,14],[16,93]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"25":{"id":25,"range":[[18,6],[18,37]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"26":{"id":26,"range":[[19,14],[19,43]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"27":{"id":27,"range":[[26,80],[26,93]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"28":{"id":28,"range":[[29,9],[29,27]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"29":{"id":29,"range":[[32,7],[32,18]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"30":{"id":30,"range":[[44,2],[44,14]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"31":{"id":31,"range":[[78,5],[78,30]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ahmet/Projects/rails/guides/Rakefile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"2108195193e5829a2ecb98918698ab1696acf30e","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"children":[{"id":3,"items":[{"id":24,"softTabs":true,"displayBuffer":{"id":25,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ahmet/Projects/rails/activejob/README.md","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":169,"softTabs":true,"displayBuffer":{"id":170,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ahmet/Projects/rails/guides/rails_guides.rb","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":173,"softTabs":true,"displayBuffer":{"id":174,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ahmet/Projects/rails/guides/CHANGELOG.md","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":177,"softTabs":true,"displayBuffer":{"id":178,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ahmet/Projects/rails/guides/Rakefile","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/ahmet/Projects/rails/guides/Rakefile","focused":true,"deserializer":"Pane"},{"id":72,"items":[{"deserializer":"MarkdownPreviewView","filePath":"/Users/ahmet/Projects/rails/activejob/README.md","editorId":"24"}],"activeItemURI":"markdown-preview://editor/24","focused":false,"deserializer":"Pane"}],"orientation":"horizontal","deserializer":"PaneAxis"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-gfm","language-ruby","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/ahmet/Projects/rails/activejob/README.md":1425636865518,"/Users/ahmet/Projects/rails/guides/rails_guides.rb":1425636894327,"/Users/ahmet/Projects/rails/guides/CHANGELOG.md":1425636896161,"/Users/ahmet/Projects/rails/guides/Rakefile":1425636897010},"keybinding-resolver":{},"metrics":{"sessionLength":154679},"tree-view":{"directoryExpansionStates":{"/Users/ahmet/Projects/rails":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"actionmailer":{"isExpanded":false,"entries":{}},"actionpack":{"isExpanded":false,"entries":{}},"actionview":{"isExpanded":false,"entries":{}},"activejob":{"isExpanded":false,"entries":{}},"activemodel":{"isExpanded":false,"entries":{}},"activerecord":{"isExpanded":false,"entries":{}},"activesupport":{"isExpanded":false,"entries":{}},"ci":{"isExpanded":false,"entries":{}},"guides":{"isExpanded":true,"entries":{"assets":{"isExpanded":false,"entries":{}},"bug_report_templates":{"isExpanded":false,"entries":{}},"rails_guides":{"isExpanded":false,"entries":{}},"source":{"isExpanded":false,"entries":{}}}},"railties":{"isExpanded":false,"entries":{}},"tasks":{"isExpanded":false,"entries":{}},"tools":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/ahmet/Projects/rails/guides/Rakefile","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}